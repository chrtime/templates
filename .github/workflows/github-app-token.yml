name: Generate github apps token
on:
  workflow_call:
    inputs:
      apps_id:
        required: true
        type: string
      install_id:
        required: true
        type: string
    secrets:
      apps_private_key:
        required: true
    outputs:
      token:
        description: "Returning a usable install token that can be used to authenticate to the Github API"
        value: ${{ jobs.token.token-output }}
      nottoken:
        descripton: "fixed value"
        value: "TEEEEST

jobs:
  token:
    name: generate install token
    runs-on: ubuntu-latest
    outputs:
      token-output: ${{ steps.token-job.outputs.token }}
      test-out: "test from external workflow"
    steps:
      - uses: actions/checkout@v3
      
      - name: check files
        run: ls
      
      - name: Get token
        id: token-job
        env:
          apps_id: ${{ inputs.apps_id }}
          install_id: ${{ inputs.install_id }}
          private_key: ${{ secrets.apps_private_key }}
        run: | 
          jq --version
          echo "testing key variables"
          echo $private_key
          echo "testing id variable"
          echo $apps_id
          echo "testing install variable"
          echo $install_id
          
          appsAccessToken=$(ruby token.rb "$private_key" "$apps_id")
          echo "testing appsAccessToken variable"
          echo "$appsAccessToken"

          appsInstallToken=$(curl -s -X POST \
            -H "Authorization: Bearer $appsAccessToken" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/app/installations/25232808/access_tokens | jq .token)

          echo "testing appsInstallToken variable"
          echo "$appsInstallToken"
          # Trim quotes from the token
          installToken=$(echo "${appsInstallToken:1:${#appsInstallToken}-2}")
          echo "testing trimmed token variable"
          echo "$installToken"
          # Return
          echo "::set-output name=token::$installToken"
          #echo "app_token=$appsInstallToken" >> $GITHUB_ENV
